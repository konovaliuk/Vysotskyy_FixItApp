// <auto-generated />
using System;
using FixItApp.Infrastructure.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace FixItApp.Infrastructure.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20230317140121_SalaryBugFix")]
    partial class SalaryBugFix
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("FixItApp.Infrastructure.Entities.ApplicationEntity", b =>
                {
                    b.Property<string>("Id")
                        .HasMaxLength(36)
                        .HasColumnType("varchar(36)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("MasterId")
                        .IsRequired()
                        .HasColumnType("varchar(36)");

                    b.Property<decimal?>("Price")
                        .HasColumnType("decimal(15,2)");

                    b.Property<string>("Status")
                        .HasColumnType("longtext");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("varchar(36)");

                    b.HasKey("Id");

                    b.HasIndex("MasterId")
                        .IsUnique();

                    b.HasIndex("UserId");

                    b.ToTable("Applications");
                });

            modelBuilder.Entity("FixItApp.Infrastructure.Entities.FeedbackEntity", b =>
                {
                    b.Property<string>("Id")
                        .HasMaxLength(36)
                        .HasColumnType("varchar(36)");

                    b.Property<string>("ApplicationId")
                        .IsRequired()
                        .HasColumnType("varchar(36)");

                    b.Property<string>("Context")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.HasIndex("ApplicationId");

                    b.ToTable("Feedbacks");
                });

            modelBuilder.Entity("FixItApp.Infrastructure.Entities.ItemEntity", b =>
                {
                    b.Property<string>("Id")
                        .HasMaxLength(36)
                        .HasColumnType("varchar(36)");

                    b.Property<string>("ApplicationId")
                        .IsRequired()
                        .HasColumnType("varchar(36)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Problem")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.HasIndex("ApplicationId");

                    b.ToTable("Items");
                });

            modelBuilder.Entity("FixItApp.Infrastructure.Entities.RoleEntity", b =>
                {
                    b.Property<string>("Id")
                        .HasMaxLength(36)
                        .HasColumnType("varchar(36)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("Roles");

                    b.HasData(
                        new
                        {
                            Id = "6b7cef46-e804-4ad5-9d5a-bcb3219eb1ba",
                            Name = "Customer"
                        },
                        new
                        {
                            Id = "5a8944d9-636e-4a1b-a879-71fae3665bbc",
                            Name = "Master"
                        },
                        new
                        {
                            Id = "e4954596-88a6-499f-a948-69df85b34a55",
                            Name = "Manager"
                        });
                });

            modelBuilder.Entity("FixItApp.Infrastructure.Entities.UserEntity", b =>
                {
                    b.Property<string>("Id")
                        .HasMaxLength(36)
                        .HasColumnType("varchar(36)");

                    b.Property<string>("Login")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasMaxLength(36)
                        .HasColumnType("varchar(36)");

                    b.Property<string>("Surname")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("FixItApp.Infrastructure.Entities.ApplicationEntity", b =>
                {
                    b.HasOne("FixItApp.Infrastructure.Entities.UserEntity", "Master")
                        .WithOne()
                        .HasForeignKey("FixItApp.Infrastructure.Entities.ApplicationEntity", "MasterId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("FixItApp.Infrastructure.Entities.UserEntity", "User")
                        .WithMany("Applications")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Master");

                    b.Navigation("User");
                });

            modelBuilder.Entity("FixItApp.Infrastructure.Entities.FeedbackEntity", b =>
                {
                    b.HasOne("FixItApp.Infrastructure.Entities.ApplicationEntity", "Application")
                        .WithMany("Feedbacks")
                        .HasForeignKey("ApplicationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Application");
                });

            modelBuilder.Entity("FixItApp.Infrastructure.Entities.ItemEntity", b =>
                {
                    b.HasOne("FixItApp.Infrastructure.Entities.ApplicationEntity", "Application")
                        .WithMany("Items")
                        .HasForeignKey("ApplicationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Application");
                });

            modelBuilder.Entity("FixItApp.Infrastructure.Entities.UserEntity", b =>
                {
                    b.HasOne("FixItApp.Infrastructure.Entities.RoleEntity", "Role")
                        .WithMany("Users")
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Role");
                });

            modelBuilder.Entity("FixItApp.Infrastructure.Entities.ApplicationEntity", b =>
                {
                    b.Navigation("Feedbacks");

                    b.Navigation("Items");
                });

            modelBuilder.Entity("FixItApp.Infrastructure.Entities.RoleEntity", b =>
                {
                    b.Navigation("Users");
                });

            modelBuilder.Entity("FixItApp.Infrastructure.Entities.UserEntity", b =>
                {
                    b.Navigation("Applications");
                });
#pragma warning restore 612, 618
        }
    }
}
